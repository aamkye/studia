name: Pack Release

on:
  push:
    # paths:
    #   - 'przedmiot/**.md'
    # branches:
    #   - master
    tags:
      - '*'
  workflow_dispatch:

jobs:
  files:
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.files_list.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: files_list
        run: echo "matrix=$(ls przedmiot/*.md | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
      - run: tree .

  pandoc:
    needs: files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file: ${{ fromJson(needs.files.outputs.files) }}
    steps:
      - uses: actions/checkout@v3
      - run: tree .
      - uses: mad9000/actions-find-and-replace-string@3
        id: path
        with:
          source: ${{ matrix.file }}
          find: '/.*'
          replace: ''
      - uses: mad9000/actions-find-and-replace-string@3
        id: file_without_path
        with:
          source: ${{ matrix.file }}
          find: 'przedmiot/'
          replace: ''
      - uses: mad9000/actions-find-and-replace-string@3
        id: file_without_path_end_extension
        with:
          source: ${{ steps.file_without_path.outputs.value }}
          find: '.md'
          replace: ''
      - id: prepare_output
        run: |
          mkdir -p output
      - run: tree .
      - uses: docker://pandoc/latex:latest
        with:
          args: >-
            --output="output/${{ steps.file_without_path_end_extension.outputs.value }}.pdf"
            --from=markdown
            --to=pdf
            --resource-path=.:obrazki:obrazki/*:przedmiot:przedmiot/*
            "${{ matrix.file }}"
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.file_without_path_end_extension.outputs.value }}.pdf
          path: output/${{ steps.file_without_path_end_extension.outputs.value }}.pdf
          if-no-files-found: error
          retention-days: 1
      - run: tree .

  release:
    needs: pandoc
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - run: tree .
      # Ugly hacks...
      - uses: actions/download-artifact@v4
        with:
          path: output-tmp
      - run: mkdir output && mv output-tmp/**/*.pdf output
      - run: tree .
      - id: date
        run: echo "date=$(date +'%d-%m-%Y')" >> $GITHUB_OUTPUT
      - uses: montudor/action-zip@v1
      - run: zip -qq -r wszystko-${{ github.ref_name }}-${{ steps.date.outputs.date }}.zip ./*
        working-directory: output

      - id: files
        run: echo "changed_files=$(git diff --name-only -r $(git describe --tags --abbrev=0)..HEAD | xargs)" >> $GITHUB_OUTPUT
      - id: commits
        run: echo "commits=$(git log --pretty=format:'%s' --no-merges --oneline $(git describe --tags --abbrev=0)..HEAD)" >> $GITHUB_OUTPUT

      - run: |
          shopt -s extglob
          echo -e "# Zmienione pliki względem poprzedniej wersji\n" > body.md
          for changed_file in ${{ steps.files.outputs.changed_files }}; do
            if [[ ${changed_file} == przedmiot/*.md ]]; then
              echo -e "- ${changed_file}\n" >> body.md
            fi
          done
          echo -e "# Zmiany względem poprzedniej wersji\n" >> body.md
          for commit in ${{ steps.commits.outputs.commits }}; do
            echo -e "- ${commit}\n" >> body.md
          done

      - uses: ncipollo/release-action@v1
        with:
          name: Release ${{ github.ref_name }} / ${{ steps.date.outputs.date }}
          artifacts: "output/*"
          tag: ${{ github.ref_name }}
          commit: ${{ github.sha }}
          bodyFile: body.md
